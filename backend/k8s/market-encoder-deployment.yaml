apiVersion: apps/v1
kind: Deployment
metadata:
  name: market-encoder
  namespace: time-series-indexing
  labels:
    app: market-encoder
    component: data-processor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: market-encoder
  template:
    metadata:
      labels:
        app: market-encoder
        component: data-processor
    spec:
      containers:
      - name: market-encoder
        image: market-encoder:latest
        imagePullPolicy: Always
        env:
        - name: CHROMA_DB_PATH
          value: "/app/data/chroma_db"
        - name: PYTHONPATH
          value: "/app"
        - name: LOG_LEVEL
          value: "INFO"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: chroma-data
          mountPath: /app/data
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "from market_encoder.encoder import MarketEncoder; encoder = MarketEncoder(); print('OK')"
          initialDelaySeconds: 60
          periodSeconds: 300
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "from market_encoder.encoder import MarketEncoder; encoder = MarketEncoder(); print('OK')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: chroma-data
        persistentVolumeClaim:
          claimName: market-encoder-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: market-encoder-pvc
  namespace: time-series-indexing
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: market-encoder-service
  namespace: time-series-indexing
  labels:
    app: market-encoder
spec:
  selector:
    app: market-encoder
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP