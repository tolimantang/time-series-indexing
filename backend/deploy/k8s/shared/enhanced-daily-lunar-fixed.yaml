apiVersion: batch/v1
kind: CronJob
metadata:
  name: enhanced-daily-lunar-analysis
  namespace: time-series-indexing
spec:
  # Run daily at 7 AM UTC (market close + analysis time)
  schedule: "0 7 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          # Get the latest code from the repository
          - name: git-sync
            image: alpine/git:latest
            command: ["/bin/sh"]
            args:
              - -c
              - |
                echo "üìÇ Syncing latest code..."
                git clone https://github.com/your-repo/time-series-indexing.git /workspace || \
                echo "‚ö†Ô∏è  Using placeholder - update with actual repo URL"

                if [ -f /workspace/backend/src/llm_analyzer/enhanced_daily_lunar_tester.py ]; then
                  cp /workspace/backend/src/llm_analyzer/enhanced_daily_lunar_tester.py /app/
                  echo "‚úÖ Script synced successfully"
                else
                  echo "‚ùå Script not found in repository"
                  exit 1
                fi
            volumeMounts:
            - name: app-volume
              mountPath: /app
            - name: workspace-volume
              mountPath: /workspace

          containers:
          - name: enhanced-daily-lunar-analyzer
            image: python:3.11-slim
            command: ["/bin/bash"]
            args:
              - -c
              - |
                echo "üåôüìà Enhanced Daily Lunar Analysis CronJob"

                # Install dependencies (one-time setup)
                apt-get update && apt-get install -y \
                  python3 \
                  python3-pip \
                  libpq-dev \
                  gcc \
                  && rm -rf /var/lib/apt/lists/*

                # Install Python dependencies
                pip3 install --no-cache-dir psycopg2-binary==2.9.11

                # Verify script exists
                if [ ! -f /app/enhanced_daily_lunar_tester.py ]; then
                  echo "‚ùå enhanced_daily_lunar_tester.py not found"
                  exit 1
                fi

                # Run analysis for multiple symbols and timing types
                symbols=(
                  "PLATINUM_FUTURES PLATINUM"
                  "SILVER_FUTURES SILVER"
                  "GOLD_FUTURES GOLD"
                )

                for symbol_pair in "${symbols[@]}"; do
                  read -r symbol market <<< "$symbol_pair"
                  echo "üéØ Analyzing $market ($symbol)..."

                  # Run next-day analysis
                  echo "üìä Running next-day analysis for $market..."
                  python3 /app/enhanced_daily_lunar_tester.py "$symbol" "$market" next_day

                  # Run same-day analysis
                  echo "üìä Running same-day analysis for $market..."
                  python3 /app/enhanced_daily_lunar_tester.py "$symbol" "$market" same_day

                  echo "‚úÖ Completed analysis for $market"
                  sleep 2  # Brief pause between symbols
                done

                echo "üéØ Daily lunar analysis completed for all symbols!"
            env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: market-encoder-secrets
                  key: db-host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: market-encoder-secrets
                  key: db-user
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: market-encoder-secrets
                  key: db-name
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: market-encoder-secrets
                  key: db-password
            - name: DB_PORT
              value: "5432"
            volumeMounts:
            - name: app-volume
              mountPath: /app
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
              limits:
                memory: "1Gi"
                cpu: "500m"

          volumes:
          - name: app-volume
            emptyDir: {}
          - name: workspace-volume
            emptyDir: {}

          restartPolicy: OnFailure
      backoffLimit: 2