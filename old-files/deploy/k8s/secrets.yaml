# Kubernetes Secrets for AstroFinancial
# NOTE: In production, use external-secrets-operator with AWS Secrets Manager
apiVersion: v1
kind: Secret
metadata:
  name: astro-secrets
  namespace: astro-financial
type: Opaque
stringData:
  # Database connection
  DATABASE_URL: "postgresql://username:password@astro-financial-db.cluster-xyz.us-west-2.rds.amazonaws.com:5432/astrofinancial"

  # JWT secret for authentication
  JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production-make-it-very-long-and-random"

  # Environment
  ENVIRONMENT: "production"

  # Optional: External API keys for future integrations
  # OPENAI_API_KEY: "sk-..."
  # NEWS_API_KEY: "..."
---
# External Secrets Operator configuration (recommended for production)
# Uncomment and configure after setting up AWS Secrets Manager
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: aws-secrets-store
#   namespace: astro-financial
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-west-2
#       auth:
#         serviceAccount:
#           name: external-secrets-sa
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: astro-external-secrets
#   namespace: astro-financial
# spec:
#   refreshInterval: 1m
#   secretStoreRef:
#     name: aws-secrets-store
#     kind: SecretStore
#   target:
#     name: astro-secrets
#     creationPolicy: Owner
#   data:
#   - secretKey: DATABASE_URL
#     remoteRef:
#       key: astro-financial/database
#       property: url
#   - secretKey: JWT_SECRET
#     remoteRef:
#       key: astro-financial/auth
#       property: jwt_secret