# Application Load Balancer Ingress for AstroFinancial API
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astro-api-ingress
  namespace: astro-financial
  annotations:
    # ALB Ingress Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:YOUR-ACCOUNT-ID:certificate/YOUR-CERT-ID
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    # Security and access control
    alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx  # Replace with your security group ID
    alb.ingress.kubernetes.io/subnets: subnet-xxxxxx,subnet-yyyyyy  # Replace with your public subnet IDs
    # CORS handling
    alb.ingress.kubernetes.io/actions.cors: |
      {
        "Type": "fixed-response",
        "FixedResponseConfig": {
          "ContentType": "text/plain",
          "StatusCode": "200",
          "MessageBody": "OK"
        }
      }
spec:
  rules:
  - host: api.astrofinancial.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astro-api-service
            port:
              number: 80
      # Handle CORS preflight requests
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: cors
            port:
              number: use-annotation
---
# Network Policy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: astro-api-network-policy
  namespace: astro-financial
spec:
  podSelector:
    matchLabels:
      app: astro-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system  # Allow ALB controller
    - podSelector: {}  # Allow pods in same namespace
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow database connections
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  # Allow outbound HTTPS for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443